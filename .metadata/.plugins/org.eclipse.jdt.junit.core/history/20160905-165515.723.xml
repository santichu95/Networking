<?xml version="1.0" encoding="UTF-8"?><testrun name="FoodItemTest" project="FoodItem" tests="49" started="49" failures="0" errors="5" ignored="0">
  <testsuite name="foodnetwork.serialization.test.FoodItemTest" time="0.005">
    <testcase name="testReadIntException1" classname="foodnetwork.serialization.test.FoodItemTest" time="0.001"/>
    <testcase name="testReadIntException2" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadTypeException1" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadTypeException2" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadTypeException3" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadTypeException4" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadTypeException5" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadTypeException6" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadMealType" classname="foodnetwork.serialization.test.FoodItemTest" time="0.001">
      <error>java.io.FileNotFoundException: type (The system cannot find the file specified)&#13;
	at java.io.FileInputStream.open0(Native Method)&#13;
	at java.io.FileInputStream.open(Unknown Source)&#13;
	at java.io.FileInputStream.&lt;init&gt;(Unknown Source)&#13;
	at foodnetwork.serialization.test.FoodItemTest.testReadMealType(FoodItemTest.java:571)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testWriteTypeBreakfast" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testWriteCal" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testWriteFat" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testToString" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testWriteName" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadEntireFoodItem" classname="foodnetwork.serialization.test.FoodItemTest" time="0.001">
      <error>java.io.FileNotFoundException: breakfast (The system cannot find the file specified)&#13;
	at java.io.FileInputStream.open0(Native Method)&#13;
	at java.io.FileInputStream.open(Unknown Source)&#13;
	at java.io.FileInputStream.&lt;init&gt;(Unknown Source)&#13;
	at foodnetwork.serialization.test.FoodItemTest.testReadEntireFoodItem(FoodItemTest.java:550)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testGetMealTypeException" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testGetName" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadType2" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadType3" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadType4" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadType5" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadNameException1" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadNameException2" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadNameException3" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadNameException4" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadNameException5" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadNameException6" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadNameException7" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadName" classname="foodnetwork.serialization.test.FoodItemTest" time="0.001">
      <error>java.io.FileNotFoundException: breakfast (The system cannot find the file specified)&#13;
	at java.io.FileInputStream.open0(Native Method)&#13;
	at java.io.FileInputStream.open(Unknown Source)&#13;
	at java.io.FileInputStream.&lt;init&gt;(Unknown Source)&#13;
	at foodnetwork.serialization.test.FoodItemTest.testReadName(FoodItemTest.java:585)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testReadCalException1" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadCalException2" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testSetMealType" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testGetMealTypeBreakfast" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testGetMealType" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testGetMealTypeCodeDinner" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testGetMealTypeLunch" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testGetMealTypeSnack" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testReadFat" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0">
      <error>java.io.FileNotFoundException: fat (The system cannot find the file specified)&#13;
	at java.io.FileInputStream.open0(Native Method)&#13;
	at java.io.FileInputStream.open(Unknown Source)&#13;
	at java.io.FileInputStream.&lt;init&gt;(Unknown Source)&#13;
	at foodnetwork.serialization.test.FoodItemTest.testReadFat(FoodItemTest.java:564)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testReadInt" classname="foodnetwork.serialization.test.FoodItemTest" time="0.001">
      <error>java.io.FileNotFoundException: breakfast (The system cannot find the file specified)&#13;
	at java.io.FileInputStream.open0(Native Method)&#13;
	at java.io.FileInputStream.open(Unknown Source)&#13;
	at java.io.FileInputStream.&lt;init&gt;(Unknown Source)&#13;
	at foodnetwork.serialization.test.FoodItemTest.testReadInt(FoodItemTest.java:578)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)&#13;
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)&#13;
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)&#13;
	at java.lang.reflect.Method.invoke(Unknown Source)&#13;
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)&#13;
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)&#13;
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
	at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)&#13;
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)&#13;
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)&#13;
&#13;
</error>
    </testcase>
    <testcase name="testGetMealTypeCodeLunch" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testGetMealTypeCodeSnack" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testSetCalories" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testGetCalories" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testEquals" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testGetFat" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testSetName" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testSetFat" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testGetMealTypeDinner" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
    <testcase name="testGetMealTypeCodeBreakfast" classname="foodnetwork.serialization.test.FoodItemTest" time="0.0"/>
  </testsuite>
</testrun>
